version: '3.7'
services:
  reverse-proxy:
    image: traefik:1.7.8
    command: --configfile='/container/traefik/traefik.toml' --debug
    depends_on:
      - errorpages
    networks:
      reverse-proxy:
        aliases:
          - reverse-proxy
          - reverse-proxy.docker
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /configs/traefik:/container/traefik:ro
    deploy:
      placement:
        constraints: [node.role == manager]
      mode: global
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 5

  errorpages:
    image: nginx:stable-alpine
    networks:
      reverse-proxy:
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-debugging_reverse-proxy
        - 'traefik.frontend.rule=HostRegexp:{catchall:.*};ReplacePath: /raise-503-error'
        - traefik.frontend.priority=1
        - traefik.port=8080
        - traefik.weight=10
        - traefik.backend=error
        - traefik.backend.loadbalancer.method=drr
        - traefik.backend.loadbalancer.stickiness=false
        - traefik.backend.loadbalancer.swarm=true
      mode: global
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 5

  webserver-with-errorpages:
    image: nginx:stable-alpine
    networks:
      reverse-proxy:
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /var/www/webroot:/var/www/webroot
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-debugging_reverse-proxy
        - traefik.port=8080
        - traefik.weight=10
        - traefik.frontend.errors.network.backend=error
        - traefik.frontend.errors.network.query=/{status}.html
        - traefik.frontend.errors.network.status=400,401,405,408,429,500-599
        - traefik.frontend.passHostHeader=true
        - traefik.frontend.priority=10
        - traefik.frontend.redirect.entryPoint=https
        - traefik.frontend.redirect.permanent=true
        - traefik.frontend.rule=Host:with-errorpages.dev.local
        - traefik.backend.loadbalancer.method=drr
        - traefik.backend.loadbalancer.stickiness.cookieName=traefik_test
        - traefik.backend.loadbalancer.stickiness=true
        - traefik.backend.loadbalancer.swarm=true
      mode: global
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 5

  webserver-without-errorpages:
    image: nginx:stable-alpine
    networks:
      reverse-proxy:
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /var/www/webroot:/var/www/webroot
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-debugging_reverse-proxy
        - traefik.port=8080
        - traefik.weight=10
        - traefik.frontend.passHostHeader=true
        - traefik.frontend.priority=10
        - traefik.frontend.redirect.entryPoint=https
        - traefik.frontend.redirect.permanent=true
        - traefik.frontend.rule=Host:without-errorpages.dev.local
        - traefik.backend.loadbalancer.method=drr
        - traefik.backend.loadbalancer.stickiness.cookieName=traefik_test
        - traefik.backend.loadbalancer.stickiness=true
        - traefik.backend.loadbalancer.swarm=true
      mode: global
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 5

networks:
  reverse-proxy:
    driver: overlay
    attachable: true
