worker_processes                1;
# num of opened files per worker
worker_rlimit_nofile            20000;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

events {
    worker_connections          1024;
    multi_accept                off;
}


###################################################
# HTTP Block
###################################################

http {

    ###############################################
    # Basic Settings
    ###############################################

    charset                     utf-8;
    # hide information about nginx
    server_tokens               off;

    include                     /etc/nginx/mime.types;
    default_type                application/octet-stream;

    # maximal allowed size of the client request body
    client_max_body_size        200M;

    ignore_invalid_headers      on;
    types_hash_max_size         2048;


    ###############################################
    # Performance Tweaks
    ###############################################

    # a comprehensive list of all parameters can be found at:
    # http://nginx.org/en/docs/http/ngx_http_core_module.html

    # for detailed information on the next three parameters read:
    # https://thoughts.t37.net/nginx-optimization-understanding-sendfile-tcp-nodelay-and-tcp-nopush-c55cdd276765
    # sendfile copies data between one file descriptor and another directly in
    # kernel space
    sendfile                    on;
    # optimize the amount of data that is send in one TCP packet
    tcp_nopush                  on;
    # don't introduce artificial delay
    tcp_nodelay                 on;

    # timeout for keep-alive connections. Server will close connections after this time
    keepalive_timeout           30;
    # maximum number of requests that can be served through one keep-alive connection
    keepalive_requests          2000;
    # allow the server to close the connection after a client stops responding
    reset_timedout_connection   on;
    # how long to wait for the client to send a request header
    client_header_timeout       15;
    # read timeout for the request body from client
    client_body_timeout         15;
    # timeout for transmitting a response to the client
    send_timeout                10;

    # buffer for reading a client request header
    client_header_buffer_size   1k;

    large_client_header_buffers 4 4k;
    # when a request body is larger than the buffer size, it is written to a temporary file
    client_body_buffer_size     128k;
    # client_body_temp_path       /var/lib/nginx/client_body_temp;
    # buffers used for reading a response from a disk.
    output_buffers              4 4k;
    # transmission of client data will be postponed until nginx has at least size bytes of data to send
    postpone_output             1460;

    # cache files for a short period of time
    # 'max' maximal number of cached filds
    # 'inactive' exclude files that are not accessed within this period of time
    open_file_cache             max=1000 inactive=20;
    # invalidate cached file after this time
    open_file_cache_valid       30;
    # cache only if the file has been accessed a couple of times
    open_file_cache_min_uses    5;
    open_file_cache_errors      off;


    ###############################################
    # Logs
    ###############################################
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                                   '$status $body_bytes_sent "$http_referer" '
                                   '"$http_user_agent" "$http_x_forwarded_for"';
    error_log                       /dev/stderr    warn;
    access_log                      /dev/stdout    main;


    ###############################################
    # Gzip Settings
    ###############################################

    # http://nginx.org/en/docs/http/ngx_http_gzip_module.html

    gzip                        on;
    gzip_disable                "msie6";
    # minimum length of a response that will be gzipped
    gzip_min_length             1000;
    gzip_vary                   on;
    gzip_proxied                expired no-cache no-store private auth;
    gzip_comp_level             5;
    gzip_buffers                16 8k;
    gzip_http_version           1.1;
    gzip_types                  text/css text/plain text/xml text/x-component application/atom+xml application/javascript application/x-javascript application/json application/xml+rss application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/svg+xml image/x-icon;

    ###############################################
    # Other
    ###############################################

    # get client ip from header set by reverse proxy
    set_real_ip_from            10.0.0.0/8;
    set_real_ip_from            172.16.0.0/12;
    real_ip_header              X-Forwarded-For;

    # Set $real_scheme variable to X-Forwarded-Proto passed by the reverse proxy
    map $http_x_forwarded_proto $real_scheme {
        default $http_x_forwarded_proto;
        ''      $scheme;
    }

    map $real_scheme $real_https {
        default 0;
        'https' 1;
    }

    map $real_scheme $real_server_port {
        default 80;
        'https' 443;
    }

    # Nginx is serving from 8080 and 8443 but the ports are mapped to 80 and
    # 443. This option prevents Nginx from adding the wrong port in a redirect.
    port_in_redirect            off;


    ###############################################
    # Virtual hosts
    ###############################################

    server {
        listen                      8080;
        listen                      [::]:8080;

        root                        /var/www/webroot;
        index                       index.html;

        location / {
            try_files $uri $uri/ /index.html;
        }

        location = /robots.txt  { log_not_found off; }
        location = /favicon.ico { access_log off; log_not_found off; }
        location ~ /\.          { access_log off; log_not_found off; deny all; }

        # client caching
        location ~* \.(?:css|js|jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
            expires                 1M;
            access_log              off;
        }
        location ~* \.(?:rss|atom)$ {
            expires                 1h;
        }
    }
}
